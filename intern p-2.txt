FULL STACK PROJECT NO:2

BACKEND: Django

pip install django mysqlclient djangorestframework
django-admin startproject todoproject
cd todoproject
django-admin startapp tasks


DATABASE: MySQL

CREATE DATABASE tododb;
CREATE USER 'todouser'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON tododb.* TO 'todouser'@'localhost';
FLUSH PRIVILEGES;


-settings.py
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tododb',
        'USER': 'todouser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

INSTALLED_APPS = [
    ...
    'tasks',
    'rest_framework',
]


-models.py
from django.db import models

class Task(models.Model):
    title = models.CharField(max_length=200)
    description = models.TextField(blank=True)
    completed = models.BooleanField(default=False)

    def __str__(self):
        return self.title

python manage.py makemigrations
python manage.py migrate


-serializer.py
from rest_framework import serializers
from .models import Task

class TaskSerializer(serializers.ModelSerializer):
    class Meta:
        model = Task
        fields = '__all__'

-views.py
from rest_framework import viewsets
from .models import Task
from .serializers import TaskSerializer

class TaskViewSet(viewsets.ModelViewSet):
    queryset = Task.objects.all()
    serializer_class = TaskSerializer


-urls.py
from django.urls import path, include
from rest_framework.routers import DefaultRouter
from .views import TaskViewSet

router = DefaultRouter()
router.register(r'tasks', TaskViewSet)

urlpatterns = [
    path('', include(router.urls)),
]


-todoproject.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('api/', include('tasks.urls')),
]


-RUN THE SERVER 
python manage.py runserver


-CREATE REACT APP
npx create-react-app todo-frontend
cd todo-frontend

HTTP REQUEST
npm install axios


-src.py
import axios from 'axios';

const API_URL = 'http://localhost:8000/api/tasks/';

const getTasks = () => {
    return axios.get(API_URL);
};

const createTask = (task) => {
    return axios.post(API_URL, task);
};

const updateTask = (id, task) => {
    return axios.put(`${API_URL}${id}/`, task);
};

const deleteTask = (id) => {
    return axios.delete(`${API_URL}${id}/`);
};

export { getTasks, createTask, updateTask, deleteTask };


-components.py
import React, { useState, useEffect } from 'react';
import { getTasks, createTask, updateTask, deleteTask } from '../services/taskService';

const Task = () => {
    const [tasks, setTasks] = useState([]);
    const [title, setTitle] = useState('');
    const [description, setDescription] = useState('');
    const [editing, setEditing] = useState(false);
    const [currentTask, setCurrentTask] = useState({});

    useEffect(() => {
        loadTasks();
    }, []);

    const loadTasks = async () => {
        const response = await getTasks();
        setTasks(response.data);
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        if (editing) {
            await updateTask(currentTask.id, { title, description, completed: currentTask.completed });
            setEditing(false);
            setCurrentTask({});
        } else {
            await createTask({ title, description, completed: false });
        }
        setTitle('');
        setDescription('');
        loadTasks();
    };

    const handleEdit = (task) => {
        setEditing(true);
        setCurrentTask(task);
        setTitle(task.title);
        setDescription(task.description);
    };

    const handleDelete = async (id) => {
        await deleteTask(id);
        loadTasks();
    };

    return (
        <div>
            <h1>Task Manager</h1>
            <form onSubmit={handleSubmit}>
                <input
                    type="text"
                    placeholder="Title"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                />
                <input
                    type="text"
                    placeholder="Description"
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                />
                <button type="submit">{editing ? 'Update' : 'Add'}</button>
            </form>
            <ul>
                {tasks.map((task) => (
                    <li key={task.id}>
                        <h2>{task.title}</h2>
                        <p>{task.description}</p>
                        <button onClick={() => handleEdit(task)}>Edit</button>
                        <button onClick={() => handleDelete(task.id)}>Delete</button>
                    </li>
                ))}
            </ul>
        </div>
    );
};

export default Task;


-app.js
import React from 'react';
import Task from './components/Task';

const App = () => {
    return (
        <div className="App">
            <Task />
        </div>
    );
};

export default App;


RUN THE REACT APPLICATION
npm start
